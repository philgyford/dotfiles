
## EDITOR

#export EDITOR='subl -w'
#export EDITOR='mvim -w'
export EDITOR='atom -w'


## NODE

# For node.js (installed with homebrew).
export NODE_PATH='/usr/local/lib/node_modules'

[[ -s /Users/phil/.nvm/nvm.sh ]] && . /Users/phil/.nvm/nvm.sh # This loads NVM

export NVM_DIR="/Users/phil/.nvm"
if [ -f NVM_DIR ]
then
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
fi

## PATH

PATH=/usr/local/bin:/usr/local/sbin:$PATH
export PATH=/usr/local/mysql/bin:$PATH

export PATH=/usr/local/pgsql/bin:$PATH

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"


## RUBY

eval "$(rbenv init -)"


##Â PYTHON

export WORKON_HOME=$HOME/.virtualenvs

if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
	source /usr/local/bin/virtualenvwrapper.sh
fi

# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true
# Tell pip to create its virtualenvs in here:
export PIP_VIRTUALENV_BASE=$WORKON_HOME
# Tell pip to automatically use the currently active virtualenv.
export PIP_RESPECT_VIRTUALENV=true

# From http://hackercodex.com/guide/python-development-environment-on-mac-osx/
# If you want to install something with pip globally, you won't be able
# to because of PIP_RESPECT_VIRTUALENV.
# So instead, use this command, gpip:
gpip(){
   PIP_REQUIRE_VIRTUALENV="" pip "$@"
}
